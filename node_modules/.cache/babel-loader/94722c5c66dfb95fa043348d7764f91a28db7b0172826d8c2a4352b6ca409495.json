{"ast":null,"code":"var _jsxFileName = \"/Users/anasalsayed/Documents/Anas Alsayed/UNIVERSTY/9TH/FDRS/src/SubjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport FileUpload from './FileUpload';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  text-align: center;\n  padding: 100px;\n`;\n_c = Container;\nconst SubjectTitle = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\n_c2 = SubjectTitle;\nconst SubjectPage = () => {\n  _s();\n  const {\n    subjectName\n  } = useParams(); // Get the subject name from the route parameter\n\n  // Use the subjectName to set the page title\n  document.title = subjectName;\n\n  // State to track the selected file\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    // Implement the upload logic here\n    if (selectedFile) {\n      // You can use the selectedFile for the upload\n      alert('File uploaded successfully.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SubjectTitle, {\n      children: subjectName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Upload Files for \", subjectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      selectedFile: selectedFile,\n      onFileChange: handleFileChange,\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SubjectPage, \"aM542mxGSopgqH7pyok17k/Crh8=\", false, function () {\n  return [useParams];\n});\n_c3 = SubjectPage;\nexport default SubjectPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SubjectTitle\");\n$RefreshReg$(_c3, \"SubjectPage\");","map":{"version":3,"names":["React","useState","styled","FileUpload","useParams","jsxDEV","_jsxDEV","Container","div","_c","SubjectTitle","h1","_c2","SubjectPage","_s","subjectName","document","title","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleUpload","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileChange","onUpload","_c3","$RefreshReg$"],"sources":["/Users/anasalsayed/Documents/Anas Alsayed/UNIVERSTY/9TH/FDRS/src/SubjectPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport FileUpload from './FileUpload';\nimport { useParams } from 'react-router-dom';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 100px;\n`;\n\nconst SubjectTitle = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\n\nconst SubjectPage = () => {\n  const { subjectName } = useParams(); // Get the subject name from the route parameter\n\n  // Use the subjectName to set the page title\n  document.title = subjectName;\n\n  // State to track the selected file\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    // Implement the upload logic here\n    if (selectedFile) {\n      // You can use the selectedFile for the upload\n      alert('File uploaded successfully.');\n    }\n  };\n\n  return (\n    <Container>\n      <SubjectTitle>{subjectName}</SubjectTitle>\n      <h2>Upload Files for {subjectName}</h2>\n      <FileUpload\n        selectedFile={selectedFile}\n        onFileChange={handleFileChange}\n        onUpload={handleUpload}\n      />\n    </Container>\n  );\n};\n\nexport default SubjectPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,SAAS;AAKf,MAAMG,YAAY,GAAGR,MAAM,CAACS,EAAG;AAC/B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,YAAY;AAKlB,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAY,CAAC,GAAGX,SAAS,CAAC,CAAC,CAAC,CAAC;;EAErC;EACAY,QAAQ,CAACC,KAAK,GAAGF,WAAW;;EAE5B;EACA,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMmB,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIN,YAAY,EAAE;MAChB;MACAO,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,SAAS;IAAAmB,QAAA,gBACRpB,OAAA,CAACI,YAAY;MAAAgB,QAAA,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAC1CxB,OAAA;MAAAoB,QAAA,GAAI,mBAAiB,EAACX,WAAW;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCxB,OAAA,CAACH,UAAU;MACTe,YAAY,EAAEA,YAAa;MAC3Ba,YAAY,EAAEX,gBAAiB;MAC/BY,QAAQ,EAAER;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAAChB,EAAA,CAhCID,WAAW;EAAA,QACST,SAAS;AAAA;AAAA6B,GAAA,GAD7BpB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}